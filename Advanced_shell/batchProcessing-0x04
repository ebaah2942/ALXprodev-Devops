#!/bin/bash

pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_URL="https://pokeapi.co/api/v2/pokemon"
> errors.txt

# Declare associative array for PIDs
declare -A pids

# Fetch function
fetch_pokemon() {
    local name=$1
    if curl -s -f -o "${name}.json" "${API_URL}/${name}"; then
        echo "$name fetched"
    else
        echo "Failed to fetch $name" >> errors.txt
    fi
}

# Start each fetch in the background, store PID
for name in "${pokemon_list[@]}"; do
    fetch_pokemon "$name" &
    pids[$name]=$!
done

# Optional: Timeout handling (e.g., kill if takes too long)
# Wait up to 10 seconds, then kill remaining PIDs
sleep 10
for name in "${!pids[@]}"; do
    if kill -0 "${pids[$name]}" 2>/dev/null; then
        echo "Killing long-running fetch: $name (PID ${pids[$name]})"
        kill "${pids[$name]}"
        echo "$name fetch timed out" >> errors.txt
    fi
done

# Wait for all background jobs to finish
wait

echo "All fetch attempts completed."

if [ -s errors.txt ]; then
    echo "Some fetches failed:"
    cat errors.txt
else
    echo "All Pok√©mon data fetched successfully."
fi
